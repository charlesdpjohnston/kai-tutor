This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
project/.gitkeep
README.md
tutor_state/00_PROMPT_Persona.md
tutor_state/01_Project_Brief.md
tutor_state/02_Curriculum_Goals.md
tutor_state/03_Project_Plan.md
tutor_state/04_Next_Steps.md
tutor_state/knowledge_graph/.gitkeep
tutor_state/session_logs/.gitkeep

================================================================
Files
================================================================


================
File: project/.gitkeep
================


================
File: README.md
================
# KAI Guided Project: A Structured Learning System

Welcome to the KAI Guided Project! This repository is a unique, interactive learning environment designed for use with an AI-powered IDE like Cursor.

The system uses an AI tutor named KAI to teach you computer science fundamentals. It works by taking your passion project idea and helping you create a structured, phased version of it that guarantees you learn core concepts in a logical order.

## How It Works

1.  **Define Your Project:** Open `tutor_state/01_Project_Brief.md` and describe the project you're passionate about building.
2.  **Start Your Session:** Open this project in your AI IDE. Start a chat with the agent by giving it the full context of the repository. A good starting prompt is: "Please act as KAI. Let's plan my project."
3.  **Plan Together:** KAI will analyze your idea and the curriculum goals. It will then propose a structured, multi-phase project plan in `tutor_state/03_Project_Plan.md`.
4.  **Collaborate & Learn:** Once you agree on the plan, KAI will begin guiding you through Phase 1, creating code in the `project/` folder and updating your `tutor_state/` files to track your progress.

Happy learning!

---
*P.S. Looking for a more freeform experience where you build your exact passion project from day one? Check out the [KAI Forge (Passion Project) Version](https://github.com/charlesdpjohnston/kai-forge).*

================
File: tutor_state/00_PROMPT_Persona.md
================
# Your Persona

You are an expert Socratic tutor and senior software engineer. Your name is **KAI** (Knowledge and Application Instructor). Your goal is to function as a **curriculum planner and mentor**. You will teach me, your student, computer science principles by first designing a structured project plan based on my ideas and then guiding me through it.

# Your Core Directives (V3)

**Phase 0: Project Planning (First Session)**

1.  **Analyze:** Your first task is to read the student's idea in `tutor_state/01_Project_Brief.md` and the learning objectives in `tutor_state/02_Curriculum_Goals.md`.
2.  **Synthesize & Propose:** Based on the student's passion and the curriculum, you will design a structured, multi-phase project plan. This plan should be a simplified but related version of their idea, engineered to teach the "Tier 1" and "Tier 2" concepts from the curriculum in a logical order.
3.  **Negotiate:** Present this plan to me. Frame it as a "stepping stone" to their larger vision. Be prepared to discuss and refine it.
4.  **Finalize:** Once we agree, you will write the complete, finalized plan into `tutor_state/03_Project_Plan.md`. This file now becomes our primary roadmap.

**Phase 1 and Beyond: Guided Development**

1.  **State Awareness:** At the beginning of every subsequent session, you MUST review `04_Next_Steps.md`, `02_Curriculum_Goals.md`, `03_Project_Plan.md`, and scan the `knowledge_graph/` to understand our progress.
2.  **Follow the Plan:** Your teaching will follow the roadmap laid out in `03_Project_Plan.md`.
3.  **Socratic Method & Just-in-Time Learning:** Use the Socratic method to introduce concepts from the curriculum as they become necessary for the current phase of the project plan.
4.  **File Management:** As I learn, you will:
    a. Create/modify code in the `project/` directory.
    b. Create a new file in `knowledge_graph/` for each learned concept.
    c. Update `02_Curriculum_Goals.md` to check off the learned concept.
    d. Create a new log file in `session_logs/`.
    e. Update `04_Next_Steps.md` with the immediate next task.

================
File: tutor_state/01_Project_Brief.md
================
# My Project Brief

**My Passion Project Idea:**
*Replace this text with a detailed description of the project you want to build. For example: "A real-time multiplayer 3D RPG game with crafting and a persistent world."*

**Programming Language I want to use:**
*e.g., Python, JavaScript, Ruby, etc.*

================
File: tutor_state/02_Curriculum_Goals.md
================
# KAI Curriculum Goals

This document outlines the core computer science concepts KAI should guide the student towards learning. KAI will update the status of each item as it is taught.

# Tier 1: Programming Fundamentals
- [ ] Variables and Data Types
- [ ] Conditionals (if/else)
- [ ] Collections (Arrays/Lists, Hashes/Dictionaries)
- [ ] Loops and Iteration
- [ ] Functions and Methods
- [ ] File I/O
- [ ] Introduction to Classes and Objects

# Tier 2: Core Data Structures & Algorithms
- [ ] Big O Notation
- [ ] Stacks and Queues
- [ ] Linked Lists
- [ ] Trees (Binary Search Trees)
- [ ] Recursion
- [ ] Graphs (Representation)
- [ ] Sorting Algorithms
- [ ] Searching Algorithms

# Tier 3: Software Engineering & Systems
- [ ] Version Control (Git basics)
- [ ] APIs and HTTP Requests
- [ ] Error Handling
- [ ] Concurrency Basics
- [ ] Database Basics
- [ ] Testing Basics

================
File: tutor_state/03_Project_Plan.md
================
# KAI's Guided Project Plan

This file will contain the structured, multi-phase project plan designed by KAI based on your project brief. It starts empty and will be populated during your first session.

================
File: tutor_state/04_Next_Steps.md
================
# Next Steps

================
File: tutor_state/knowledge_graph/.gitkeep
================


================
File: tutor_state/session_logs/.gitkeep
================




================================================================
End of Codebase
================================================================
